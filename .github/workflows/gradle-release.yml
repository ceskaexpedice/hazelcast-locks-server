name: Release new version of Hazelcast lock server 

on:
  workflow_dispatch:
    inputs: 
    

jobs:
  build_jar:

    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
    - name: Set execute permission for gradlew
      run: chmod +x ./gradlew
      env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Get project version from Gradle
      run: |
        VERSION=$(./gradlew printVersion -q)
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "TAG_NAME=v$VERSION" >> $GITHUB_ENV
        echo "RELEASE_NAME=Release v$VERSION" >> $GITHUB_ENV   

    - name: Build with Gradle
      run: ./gradlew build publish installDist jib
      env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


    - name: Find ZIP file in build/distributions directory
      id: find_zip
      run: |
        ZIP_FILE=$(find build/distributions -name "*.zip" -type f -print -quit)
        ZIP_NAME=$(basename "$ZIP_FILE")
        echo "ZIP_FILE=$ZIP_FILE" >> "$GITHUB_OUTPUT"
        echo "ZIP_NAME=$ZIP_NAME" >> "$GITHUB_OUTPUT"
        echo "Found ZIP file: $ZIP_FILE"

    - name: Find TAR file in build/distributions directory
      id: find_tar
      run: |
        TAR_FILE=$(find build/distributions -name "*.tar" -type f -print -quit)
        TAR_NAME=$(basename "$TAR_FILE")
        echo "TAR_FILE=$TAR_FILE" >> "$GITHUB_OUTPUT"
        echo "TAR_NAME=$TAR_NAME" >> "$GITHUB_OUTPUT"
        echo "Found TAR file: $TAR_FILE"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name:  ${{ env.TAG_NAME }}
        release_name: ${{ env.RELEASE_NAME }}
        body: |
          Auto-generated release for version ${{ env.VERSION }}
        draft: true
        prerelease: false

    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{secrets.DOCKERHUB_USER}}
        password: ${{secrets.DOCKERHUB_TOKEN}}  


    - name: Upload ZIP Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.find_zip.outputs.ZIP_FILE }}
        asset_name: ${{ steps.find_zip.outputs.ZIP_NAME }}
        asset_content_type: application/zip

    - name: Upload TAR Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.find_tar.outputs.TAR_FILE }}
        asset_name: ${{ steps.find_tar.outputs.TAR_NAME }}
        asset_content_type: application/x-tar


